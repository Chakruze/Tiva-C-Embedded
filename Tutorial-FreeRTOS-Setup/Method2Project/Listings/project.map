Component: ARM Compiler 5.06 update 5 (build 528) Tool: armlink [4d35e2]

==============================================================================

Section Cross References

    startup_rvmdk.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_rvmdk.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_rvmdk.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_rvmdk.o(RESET) refers to startup_rvmdk.o(STACK) for StackMem
    startup_rvmdk.o(RESET) refers to port.o(.emb_text) for SVC_Handler
    startup_rvmdk.o(RESET) refers to port.o(i.SysTick_Handler) for SysTick_Handler
    startup_rvmdk.o(RESET) refers to __main.o(!!!main) for __main
    startup_rvmdk.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_rvmdk.o(.text) refers to startup_rvmdk.o(HEAP) for HeapMem
    startup_rvmdk.o(.text) refers to startup_rvmdk.o(STACK) for StackMem
    main.o(i.main) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    main.o(i.main) refers to tasks.o(i.vTaskStartScheduler) for vTaskStartScheduler
    main.o(i.main) refers to main.o(i.vPeriodicTask) for vPeriodicTask
    main.o(i.vPeriodicTask) refers to tasks.o(i.xTaskGetTickCount) for xTaskGetTickCount
    main.o(i.vPeriodicTask) refers to tasks.o(i.vTaskDelayUntil) for vTaskDelayUntil
    queue.o(i.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(i.prvCopyDataToQueue) refers to tasks.o(i.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(i.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(i.prvInitialiseMutex) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    queue.o(i.prvInitialiseNewQueue) refers to queue.o(i.xQueueGenericReset) for xQueueGenericReset
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvNotifyQueueSetContainer) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.prvNotifyQueueSetContainer) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvUnlockQueue) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.vTaskMissedYield) for vTaskMissedYield
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.vQueueDelete) refers to heap_1.o(i.vPortFree) for vPortFree
    queue.o(i.vQueueWaitForMessageRestricted) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.vQueueWaitForMessageRestricted) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.vQueueWaitForMessageRestricted) refers to tasks.o(i.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(i.vQueueWaitForMessageRestricted) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueAddToSet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueAddToSet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueCreateCountingSemaphore) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(i.xQueueCreateMutex) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(i.xQueueCreateMutex) refers to queue.o(i.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(i.xQueueCreateSet) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(i.xQueueGenericCreate) refers to heap_1.o(i.pvPortMalloc) for pvPortMalloc
    queue.o(i.xQueueGenericCreate) refers to queue.o(i.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericReset) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericReset) refers to list.o(i.vListInitialise) for vListInitialise
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvIsQueueFull) for prvIsQueueFull
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueGenericSendFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(i.xQueueGenericSendFromISR) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSendFromISR) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.xQueueGenericSendFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGiveFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(i.xQueueGiveFromISR) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.xQueueGiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGiveMutexRecursive) refers to tasks.o(i.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(i.xQueueGiveMutexRecursive) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueuePeek) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueuePeek) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueuePeek) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueuePeek) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueuePeek) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueuePeekFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(i.xQueuePeekFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueueReceive) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueReceive) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueReceive) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueReceive) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueReceive) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueReceiveFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(i.xQueueReceiveFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueRemoveFromSet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueRemoveFromSet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueSelectFromSet) refers to queue.o(i.xQueueReceive) for xQueueReceive
    queue.o(i.xQueueSelectFromSetFromISR) refers to queue.o(i.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueueSemaphoreTake) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueSemaphoreTake) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(i.xQueueTakeMutexRecursive) refers to tasks.o(i.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(i.xQueueTakeMutexRecursive) refers to queue.o(i.xQueueSemaphoreTake) for xQueueSemaphoreTake
    tasks.o(i.eTaskGetState) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.eTaskGetState) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.eTaskGetState) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.eTaskGetState) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.pcTaskGetName) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.data) for xTickCount
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(i.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(i.prvAddNewTaskToReadyList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.bss) for xTasksWaitingTermination
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.prvDeleteTCB) refers to heap_1.o(i.vPortFree) for vPortFree
    tasks.o(i.prvIdleTask) refers to tasks.o(i.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(i.prvIdleTask) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvInitialiseNewTask) refers to list.o(i.vListInitialiseItem) for vListInitialiseItem
    tasks.o(i.prvInitialiseNewTask) refers to port.o(i.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(i.prvInitialiseTaskLists) refers to list.o(i.vListInitialise) for vListInitialise
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.prvResetNextTaskUnblockTime) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.prvTaskIsTaskSuspended) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.pvTaskIncrementMutexHeldCount) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.ulTaskNotifyTake) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.ulTaskNotifyTake) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.ulTaskNotifyTake) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.ulTaskNotifyTake) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskGetNumberOfTasks) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.uxTaskPriorityGet) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskPriorityGetFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(i.uxTaskPriorityGetFromISR) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskResetEventItemValue) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskDelay) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskDelay) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskDelay) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskDelay) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskDelete) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskDelete) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskDelete) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskDelete) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskEndScheduler) refers to port.o(i.vPortEndScheduler) for vPortEndScheduler
    tasks.o(i.vTaskEndScheduler) refers to tasks.o(.data) for xSchedulerRunning
    tasks.o(i.vTaskInternalSetTimeOutState) refers to tasks.o(.data) for xNumOfOverflows
    tasks.o(i.vTaskMissedYield) refers to tasks.o(.data) for xYieldPending
    tasks.o(i.vTaskNotifyGiveFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(i.vTaskNotifyGiveFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskNotifyGiveFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskNotifyGiveFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskNotifyGiveFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskPlaceOnEventList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPlaceOnEventListRestricted) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPlaceOnEventListRestricted) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnEventListRestricted) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskPrioritySet) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPrioritySet) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskResume) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskResume) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.vTaskResume) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskResume) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskResume) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskResume) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskResume) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskSetTimeOutState) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSetTimeOutState) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSetTimeOutState) refers to tasks.o(.data) for xNumOfOverflows
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    tasks.o(i.vTaskStartScheduler) refers to timers.o(i.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(i.vTaskStartScheduler) refers to port.o(i.xPortStartScheduler) for xPortStartScheduler
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(.data) for xIdleTaskHandle
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.prvIdleTask) for prvIdleTask
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSuspend) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskSuspend) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(i.vTaskSuspend) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskSuspend) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskSuspendAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskCreate) refers to heap_1.o(i.pvPortMalloc) for pvPortMalloc
    tasks.o(i.xTaskCreate) refers to heap_1.o(i.vPortFree) for vPortFree
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGenericNotify) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskGenericNotify) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.data) for uxTopReadyPriority
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGenericNotifyFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(i.xTaskGenericNotifyFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskGenericNotifyFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGetCurrentTaskHandle) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskGetSchedulerState) refers to tasks.o(.data) for xSchedulerRunning
    tasks.o(i.xTaskGetTickCount) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskGetTickCountFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(i.xTaskGetTickCountFromISR) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskIncrementTick) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskIncrementTick) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskNotifyStateClear) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskNotifyStateClear) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskNotifyStateClear) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskNotifyWait) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskNotifyWait) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.xTaskNotifyWait) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskNotifyWait) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskPriorityDisinherit) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskPriorityDisinherit) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskPriorityDisinherit) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskPriorityDisinherit) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskPriorityInherit) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskPriorityInherit) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskPriorityInherit) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskPriorityInherit) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskRemoveFromEventList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskRemoveFromEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskResumeAll) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskResumeAll) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.bss) for xPendingReadyList
    tasks.o(i.xTaskResumeFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    timers.o(i.prvCheckForValidListAndQueue) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.prvCheckForValidListAndQueue) refers to list.o(i.vListInitialise) for vListInitialise
    timers.o(i.prvCheckForValidListAndQueue) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(i.prvCheckForValidListAndQueue) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.prvCheckForValidListAndQueue) refers to timers.o(.data) for xTimerQueue
    timers.o(i.prvCheckForValidListAndQueue) refers to timers.o(.bss) for xActiveTimerList1
    timers.o(i.prvGetNextExpireTime) refers to timers.o(.data) for pxCurrentTimerList
    timers.o(i.prvInitialiseNewTimer) refers to timers.o(i.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(i.prvInitialiseNewTimer) refers to list.o(i.vListInitialiseItem) for vListInitialiseItem
    timers.o(i.prvInsertTimerInActiveList) refers to list.o(i.vListInsert) for vListInsert
    timers.o(i.prvInsertTimerInActiveList) refers to timers.o(.data) for pxOverflowTimerList
    timers.o(i.prvProcessExpiredTimer) refers to list.o(i.uxListRemove) for uxListRemove
    timers.o(i.prvProcessExpiredTimer) refers to timers.o(i.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(i.prvProcessExpiredTimer) refers to timers.o(i.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(i.prvProcessExpiredTimer) refers to timers.o(.data) for pxCurrentTimerList
    timers.o(i.prvProcessReceivedCommands) refers to list.o(i.uxListRemove) for uxListRemove
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(i.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(i.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(i.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(i.prvProcessReceivedCommands) refers to heap_1.o(i.vPortFree) for vPortFree
    timers.o(i.prvProcessReceivedCommands) refers to queue.o(i.xQueueReceive) for xQueueReceive
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(.data) for xTimerQueue
    timers.o(i.prvProcessTimerOrBlockTask) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(i.prvProcessTimerOrBlockTask) refers to timers.o(i.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(i.prvProcessTimerOrBlockTask) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    timers.o(i.prvProcessTimerOrBlockTask) refers to timers.o(i.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(i.prvProcessTimerOrBlockTask) refers to queue.o(i.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(i.prvProcessTimerOrBlockTask) refers to timers.o(.data) for pxOverflowTimerList
    timers.o(i.prvSampleTimeNow) refers to tasks.o(i.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(i.prvSampleTimeNow) refers to timers.o(i.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(i.prvSampleTimeNow) refers to timers.o(.data) for xLastTime
    timers.o(i.prvSwitchTimerLists) refers to list.o(i.uxListRemove) for uxListRemove
    timers.o(i.prvSwitchTimerLists) refers to list.o(i.vListInsert) for vListInsert
    timers.o(i.prvSwitchTimerLists) refers to timers.o(i.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(i.prvSwitchTimerLists) refers to timers.o(.data) for pxCurrentTimerList
    timers.o(i.prvTimerTask) refers to timers.o(i.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(i.prvTimerTask) refers to timers.o(i.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(i.prvTimerTask) refers to timers.o(i.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(i.pvTimerGetTimerID) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.pvTimerGetTimerID) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.vTimerSetTimerID) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.vTimerSetTimerID) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.xTimerCreate) refers to heap_1.o(i.pvPortMalloc) for pvPortMalloc
    timers.o(i.xTimerCreate) refers to timers.o(i.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(i.xTimerCreateTimerTask) refers to timers.o(i.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(i.xTimerCreateTimerTask) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    timers.o(i.xTimerCreateTimerTask) refers to timers.o(.data) for xTimerQueue
    timers.o(i.xTimerCreateTimerTask) refers to timers.o(i.prvTimerTask) for prvTimerTask
    timers.o(i.xTimerGenericCommand) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(i.xTimerGenericCommand) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    timers.o(i.xTimerGenericCommand) refers to queue.o(i.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(i.xTimerGenericCommand) refers to timers.o(.data) for xTimerQueue
    timers.o(i.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.data) for xTimerTaskHandle
    timers.o(i.xTimerIsTimerActive) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.xTimerIsTimerActive) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    port.o(.emb_text) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.emb_text) refers to tasks.o(.data) for pxCurrentTCB
    port.o(i.SysTick_Handler) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    port.o(i.prvTaskExitError) refers to port.o(.data) for uxCriticalNesting
    port.o(i.pxPortInitialiseStack) refers to port.o(i.prvTaskExitError) for prvTaskExitError
    port.o(i.vPortEndScheduler) refers to port.o(.data) for uxCriticalNesting
    port.o(i.vPortEnterCritical) refers to port.o(.data) for uxCriticalNesting
    port.o(i.vPortExitCritical) refers to port.o(.data) for uxCriticalNesting
    port.o(i.vPortSetupTimerInterrupt) refers to main.o(.data) for SystemCoreClock
    port.o(i.vPortValidateInterruptPriority) refers to port.o(.emb_text) for vPortGetIPSR
    port.o(i.vPortValidateInterruptPriority) refers to port.o(.data) for ucMaxSysCallPriority
    port.o(i.xPortStartScheduler) refers to port.o(i.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(i.xPortStartScheduler) refers to port.o(.emb_text) for __asm___6_port_c_39a90d8d__prvEnableVFP
    port.o(i.xPortStartScheduler) refers to port.o(.data) for ucMaxSysCallPriority
    heap_1.o(i.pvPortMalloc) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_1.o(i.pvPortMalloc) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_1.o(i.pvPortMalloc) refers to heap_1.o(.data) for pucAlignedHeap
    heap_1.o(i.pvPortMalloc) refers to heap_1.o(.bss) for ucHeap
    heap_1.o(i.vPortInitialiseBlocks) refers to heap_1.o(.data) for xNextFreeByte
    heap_1.o(i.xPortGetFreeHeapSize) refers to heap_1.o(.data) for xNextFreeByte
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_rvmdk.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing queue.o(i.prvGetDisinheritPriorityAfterTimeout), (20 bytes).
    Removing queue.o(i.prvInitialiseMutex), (28 bytes).
    Removing queue.o(i.uxQueueMessagesWaiting), (44 bytes).
    Removing queue.o(i.uxQueueMessagesWaitingFromISR), (32 bytes).
    Removing queue.o(i.uxQueueSpacesAvailable), (50 bytes).
    Removing queue.o(i.vQueueDelete), (40 bytes).
    Removing queue.o(i.xQueueAddToSet), (38 bytes).
    Removing queue.o(i.xQueueCreateCountingSemaphore), (96 bytes).
    Removing queue.o(i.xQueueCreateMutex), (34 bytes).
    Removing queue.o(i.xQueueCreateSet), (20 bytes).
    Removing queue.o(i.xQueueGiveFromISR), (254 bytes).
    Removing queue.o(i.xQueueGiveMutexRecursive), (74 bytes).
    Removing queue.o(i.xQueueIsQueueEmptyFromISR), (40 bytes).
    Removing queue.o(i.xQueueIsQueueFullFromISR), (44 bytes).
    Removing queue.o(i.xQueuePeek), (372 bytes).
    Removing queue.o(i.xQueuePeekFromISR), (184 bytes).
    Removing queue.o(i.xQueueReceiveFromISR), (208 bytes).
    Removing queue.o(i.xQueueRemoveFromSet), (48 bytes).
    Removing queue.o(i.xQueueSelectFromSet), (24 bytes).
    Removing queue.o(i.xQueueSelectFromSetFromISR), (22 bytes).
    Removing queue.o(i.xQueueSemaphoreTake), (448 bytes).
    Removing queue.o(i.xQueueTakeMutexRecursive), (80 bytes).
    Removing tasks.o(i.eTaskGetState), (136 bytes).
    Removing tasks.o(i.pcTaskGetName), (52 bytes).
    Removing tasks.o(i.prvTaskIsTaskSuspended), (92 bytes).
    Removing tasks.o(i.pvTaskIncrementMutexHeldCount), (32 bytes).
    Removing tasks.o(i.ulTaskNotifyTake), (116 bytes).
    Removing tasks.o(i.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(i.uxTaskPriorityGet), (36 bytes).
    Removing tasks.o(i.uxTaskPriorityGetFromISR), (68 bytes).
    Removing tasks.o(i.uxTaskResetEventItemValue), (28 bytes).
    Removing tasks.o(i.vTaskDelay), (92 bytes).
    Removing tasks.o(i.vTaskDelete), (244 bytes).
    Removing tasks.o(i.vTaskEndScheduler), (40 bytes).
    Removing tasks.o(i.vTaskNotifyGiveFromISR), (248 bytes).
    Removing tasks.o(i.vTaskPlaceOnUnorderedEventList), (112 bytes).
    Removing tasks.o(i.vTaskPriorityDisinheritAfterTimeout), (248 bytes).
    Removing tasks.o(i.vTaskPrioritySet), (280 bytes).
    Removing tasks.o(i.vTaskRemoveFromUnorderedEventList), (168 bytes).
    Removing tasks.o(i.vTaskResume), (148 bytes).
    Removing tasks.o(i.vTaskSetTimeOutState), (60 bytes).
    Removing tasks.o(i.vTaskSuspend), (244 bytes).
    Removing tasks.o(i.xTaskGenericNotify), (264 bytes).
    Removing tasks.o(i.xTaskGenericNotifyFromISR), (328 bytes).
    Removing tasks.o(i.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(i.xTaskGetTickCountFromISR), (20 bytes).
    Removing tasks.o(i.xTaskNotifyStateClear), (52 bytes).
    Removing tasks.o(i.xTaskNotifyWait), (160 bytes).
    Removing tasks.o(i.xTaskPriorityInherit), (200 bytes).
    Removing tasks.o(i.xTaskResumeFromISR), (184 bytes).
    Removing timers.o(i.pcTimerGetName), (34 bytes).
    Removing timers.o(i.prvInitialiseNewTimer), (80 bytes).
    Removing timers.o(i.pvTimerGetTimerID), (46 bytes).
    Removing timers.o(i.vTimerSetTimerID), (46 bytes).
    Removing timers.o(i.xTimerCreate), (48 bytes).
    Removing timers.o(i.xTimerGetExpiryTime), (36 bytes).
    Removing timers.o(i.xTimerGetPeriod), (34 bytes).
    Removing timers.o(i.xTimerGetTimerDaemonTaskHandle), (48 bytes).
    Removing timers.o(i.xTimerIsTimerActive), (58 bytes).
    Removing port.o(i.vPortEndScheduler), (48 bytes).
    Removing heap_1.o(i.vPortInitialiseBlocks), (12 bytes).
    Removing heap_1.o(i.xPortGetFreeHeapSize), (16 bytes).

62 unused section(s) (total 6382 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      648  startup_rvmdk.o(RESET)
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    FreeRTOS\Source\list.c                   0x00000000   Number         0  list.o ABSOLUTE
    FreeRTOS\Source\portable\MemMang\heap_1.c 0x00000000   Number         0  heap_1.o ABSOLUTE
    FreeRTOS\Source\portable\RVDS\ARM_CM4F\port.c 0x00000000   Number         0  port.o ABSOLUTE
    FreeRTOS\Source\queue.c                  0x00000000   Number         0  queue.o ABSOLUTE
    FreeRTOS\Source\tasks.c                  0x00000000   Number         0  tasks.o ABSOLUTE
    FreeRTOS\Source\timers.c                 0x00000000   Number         0  timers.o ABSOLUTE
    FreeRTOS\\Source\\portable\\RVDS\\ARM_CM4F\\port.c 0x00000000   Number         0  port.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    startup_rvmdk.S                          0x00000000   Number         0  startup_rvmdk.o ABSOLUTE
    $v0                                      0x0000026c   Number         0  startup_rvmdk.o(RESET)
    NmiSR                                    0x00000281   Thumb Code     0  startup_rvmdk.o(RESET)
    FaultISR                                 0x00000283   Thumb Code     0  startup_rvmdk.o(RESET)
    IntDefaultHandler                        0x00000285   Thumb Code     0  startup_rvmdk.o(RESET)
    !!!main                                  0x00000288   Section        8  __main.o(!!!main)
    !!!scatter                               0x00000290   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x000002c4   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x000002e0   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x000002fc   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x000002fe   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x00000302   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x00000304   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x00000306   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x00000306   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x00000306   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x00000306   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x00000306   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x00000306   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x00000306   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x00000308   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x00000308   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x00000308   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x0000030e   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x0000030e   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x00000312   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x00000312   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0000031a   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x0000031c   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x0000031c   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000320   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x00000328   Section      190  port.o(.emb_text)
    $v0                                      0x00000328   Number         0  port.o(.emb_text)
    .text                                    0x000003e8   Section       24  startup_rvmdk.o(.text)
    $v0                                      0x000003e8   Number         0  startup_rvmdk.o(.text)
    .text                                    0x00000400   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x0000048a   Section        0  heapauxi.o(.text)
    .text                                    0x00000490   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x000004f4   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x0000053e   Section        0  exit.o(.text)
    .text                                    0x00000550   Section        8  libspace.o(.text)
    .text                                    0x00000558   Section        0  sys_exit.o(.text)
    .text                                    0x00000564   Section        2  use_no_semi.o(.text)
    .text                                    0x00000566   Section        0  indicate_semi.o(.text)
    i.SysTick_Handler                        0x00000568   Section        0  port.o(i.SysTick_Handler)
    i.main                                   0x0000059c   Section        0  main.o(i.main)
    i.prvAddCurrentTaskToDelayedList         0x000005c8   Section        0  tasks.o(i.prvAddCurrentTaskToDelayedList)
    prvAddCurrentTaskToDelayedList           0x000005c9   Thumb Code   124  tasks.o(i.prvAddCurrentTaskToDelayedList)
    i.prvAddNewTaskToReadyList               0x00000660   Section        0  tasks.o(i.prvAddNewTaskToReadyList)
    prvAddNewTaskToReadyList                 0x00000661   Thumb Code   150  tasks.o(i.prvAddNewTaskToReadyList)
    i.prvCheckForValidListAndQueue           0x00000714   Section        0  timers.o(i.prvCheckForValidListAndQueue)
    prvCheckForValidListAndQueue             0x00000715   Thumb Code    56  timers.o(i.prvCheckForValidListAndQueue)
    i.prvCheckTasksWaitingTermination        0x00000760   Section        0  tasks.o(i.prvCheckTasksWaitingTermination)
    prvCheckTasksWaitingTermination          0x00000761   Thumb Code    60  tasks.o(i.prvCheckTasksWaitingTermination)
    i.prvCopyDataFromQueue                   0x000007a8   Section        0  queue.o(i.prvCopyDataFromQueue)
    prvCopyDataFromQueue                     0x000007a9   Thumb Code    42  queue.o(i.prvCopyDataFromQueue)
    i.prvCopyDataToQueue                     0x000007d2   Section        0  queue.o(i.prvCopyDataToQueue)
    prvCopyDataToQueue                       0x000007d3   Thumb Code   124  queue.o(i.prvCopyDataToQueue)
    i.prvDeleteTCB                           0x0000084e   Section        0  tasks.o(i.prvDeleteTCB)
    prvDeleteTCB                             0x0000084f   Thumb Code    18  tasks.o(i.prvDeleteTCB)
    i.prvGetNextExpireTime                   0x00000860   Section        0  timers.o(i.prvGetNextExpireTime)
    prvGetNextExpireTime                     0x00000861   Thumb Code    36  timers.o(i.prvGetNextExpireTime)
    i.prvIdleTask                            0x00000888   Section        0  tasks.o(i.prvIdleTask)
    prvIdleTask                              0x00000889   Thumb Code    32  tasks.o(i.prvIdleTask)
    i.prvInitialiseNewQueue                  0x000008b0   Section        0  queue.o(i.prvInitialiseNewQueue)
    prvInitialiseNewQueue                    0x000008b1   Thumb Code    42  queue.o(i.prvInitialiseNewQueue)
    i.prvInitialiseNewTask                   0x000008da   Section        0  tasks.o(i.prvInitialiseNewTask)
    prvInitialiseNewTask                     0x000008db   Thumb Code   172  tasks.o(i.prvInitialiseNewTask)
    i.prvInitialiseTaskLists                 0x00000988   Section        0  tasks.o(i.prvInitialiseTaskLists)
    prvInitialiseTaskLists                   0x00000989   Thumb Code    70  tasks.o(i.prvInitialiseTaskLists)
    i.prvInsertTimerInActiveList             0x000009f0   Section        0  timers.o(i.prvInsertTimerInActiveList)
    prvInsertTimerInActiveList               0x000009f1   Thumb Code    80  timers.o(i.prvInsertTimerInActiveList)
    i.prvIsQueueEmpty                        0x00000a48   Section        0  queue.o(i.prvIsQueueEmpty)
    prvIsQueueEmpty                          0x00000a49   Thumb Code    26  queue.o(i.prvIsQueueEmpty)
    i.prvIsQueueFull                         0x00000a62   Section        0  queue.o(i.prvIsQueueFull)
    prvIsQueueFull                           0x00000a63   Thumb Code    30  queue.o(i.prvIsQueueFull)
    i.prvNotifyQueueSetContainer             0x00000a80   Section        0  queue.o(i.prvNotifyQueueSetContainer)
    prvNotifyQueueSetContainer               0x00000a81   Thumb Code   148  queue.o(i.prvNotifyQueueSetContainer)
    i.prvProcessExpiredTimer                 0x00000b14   Section        0  timers.o(i.prvProcessExpiredTimer)
    prvProcessExpiredTimer                   0x00000b15   Thumb Code    96  timers.o(i.prvProcessExpiredTimer)
    i.prvProcessReceivedCommands             0x00000b78   Section        0  timers.o(i.prvProcessReceivedCommands)
    prvProcessReceivedCommands               0x00000b79   Thumb Code   244  timers.o(i.prvProcessReceivedCommands)
    i.prvProcessTimerOrBlockTask             0x00000c70   Section        0  timers.o(i.prvProcessTimerOrBlockTask)
    prvProcessTimerOrBlockTask               0x00000c71   Thumb Code   102  timers.o(i.prvProcessTimerOrBlockTask)
    i.prvResetNextTaskUnblockTime            0x00000ce4   Section        0  tasks.o(i.prvResetNextTaskUnblockTime)
    prvResetNextTaskUnblockTime              0x00000ce5   Thumb Code    42  tasks.o(i.prvResetNextTaskUnblockTime)
    i.prvSampleTimeNow                       0x00000d18   Section        0  timers.o(i.prvSampleTimeNow)
    prvSampleTimeNow                         0x00000d19   Thumb Code    40  timers.o(i.prvSampleTimeNow)
    i.prvSwitchTimerLists                    0x00000d44   Section        0  timers.o(i.prvSwitchTimerLists)
    prvSwitchTimerLists                      0x00000d45   Thumb Code   152  timers.o(i.prvSwitchTimerLists)
    i.prvTaskExitError                       0x00000de4   Section        0  port.o(i.prvTaskExitError)
    prvTaskExitError                         0x00000de5   Thumb Code    64  port.o(i.prvTaskExitError)
    i.prvTimerTask                           0x00000e28   Section        0  timers.o(i.prvTimerTask)
    prvTimerTask                             0x00000e29   Thumb Code    26  timers.o(i.prvTimerTask)
    i.prvUnlockQueue                         0x00000e42   Section        0  queue.o(i.prvUnlockQueue)
    prvUnlockQueue                           0x00000e43   Thumb Code   146  queue.o(i.prvUnlockQueue)
    i.pvPortMalloc                           0x00000ed4   Section        0  heap_1.o(i.pvPortMalloc)
    i.pxPortInitialiseStack                  0x00000f44   Section        0  port.o(i.pxPortInitialiseStack)
    i.uxListRemove                           0x00000f70   Section        0  list.o(i.uxListRemove)
    i.vListInitialise                        0x00000f98   Section        0  list.o(i.vListInitialise)
    i.vListInitialiseItem                    0x00000fb2   Section        0  list.o(i.vListInitialiseItem)
    i.vListInsert                            0x00000fb8   Section        0  list.o(i.vListInsert)
    i.vListInsertEnd                         0x00000fec   Section        0  list.o(i.vListInsertEnd)
    i.vPeriodicTask                          0x00001004   Section        0  main.o(i.vPeriodicTask)
    i.vPortEnterCritical                     0x0000101c   Section        0  port.o(i.vPortEnterCritical)
    i.vPortExitCritical                      0x00001074   Section        0  port.o(i.vPortExitCritical)
    i.vPortFree                              0x000010b4   Section        0  heap_1.o(i.vPortFree)
    i.vPortSetupTimerInterrupt               0x000010d8   Section        0  port.o(i.vPortSetupTimerInterrupt)
    i.vPortValidateInterruptPriority         0x00001100   Section        0  port.o(i.vPortValidateInterruptPriority)
    i.vQueueWaitForMessageRestricted         0x0000117c   Section        0  queue.o(i.vQueueWaitForMessageRestricted)
    i.vTaskDelayUntil                        0x000011c8   Section        0  tasks.o(i.vTaskDelayUntil)
    i.vTaskInternalSetTimeOutState           0x000012a4   Section        0  tasks.o(i.vTaskInternalSetTimeOutState)
    i.vTaskMissedYield                       0x000012bc   Section        0  tasks.o(i.vTaskMissedYield)
    i.vTaskPlaceOnEventList                  0x000012c8   Section        0  tasks.o(i.vTaskPlaceOnEventList)
    i.vTaskPlaceOnEventListRestricted        0x00001304   Section        0  tasks.o(i.vTaskPlaceOnEventListRestricted)
    i.vTaskStartScheduler                    0x00001348   Section        0  tasks.o(i.vTaskStartScheduler)
    i.vTaskSuspendAll                        0x000013e0   Section        0  tasks.o(i.vTaskSuspendAll)
    i.vTaskSwitchContext                     0x000013f0   Section        0  tasks.o(i.vTaskSwitchContext)
    i.xPortStartScheduler                    0x0000147c   Section        0  port.o(i.xPortStartScheduler)
    i.xQueueGenericCreate                    0x000015ec   Section        0  queue.o(i.xQueueGenericCreate)
    i.xQueueGenericReset                     0x00001648   Section        0  queue.o(i.xQueueGenericReset)
    i.xQueueGenericSend                      0x000016e0   Section        0  queue.o(i.xQueueGenericSend)
    i.xQueueGenericSendFromISR               0x000018b0   Section        0  queue.o(i.xQueueGenericSendFromISR)
    i.xQueueReceive                          0x000019c0   Section        0  queue.o(i.xQueueReceive)
    i.xTaskCheckForTimeOut                   0x00001b30   Section        0  tasks.o(i.xTaskCheckForTimeOut)
    i.xTaskCreate                            0x00001bc0   Section        0  tasks.o(i.xTaskCreate)
    i.xTaskGetSchedulerState                 0x00001c20   Section        0  tasks.o(i.xTaskGetSchedulerState)
    i.xTaskGetTickCount                      0x00001c40   Section        0  tasks.o(i.xTaskGetTickCount)
    i.xTaskIncrementTick                     0x00001c4c   Section        0  tasks.o(i.xTaskIncrementTick)
    i.xTaskPriorityDisinherit                0x00001d94   Section        0  tasks.o(i.xTaskPriorityDisinherit)
    i.xTaskRemoveFromEventList               0x00001e60   Section        0  tasks.o(i.xTaskRemoveFromEventList)
    i.xTaskResumeAll                         0x00001efc   Section        0  tasks.o(i.xTaskResumeAll)
    i.xTimerCreateTimerTask                  0x00002004   Section        0  timers.o(i.xTimerCreateTimerTask)
    i.xTimerGenericCommand                   0x0000205c   Section        0  timers.o(i.xTimerGenericCommand)
    x$fpl$fpinit                             0x000020e0   Section       10  fpinit.o(x$fpl$fpinit)
    $v0                                      0x000020e0   Number         0  fpinit.o(x$fpl$fpinit)
    .data                                    0x20000000   Section        4  main.o(.data)
    .data                                    0x20000004   Section       60  tasks.o(.data)
    pxDelayedTaskList                        0x20000008   Data           4  tasks.o(.data)
    pxOverflowDelayedTaskList                0x2000000c   Data           4  tasks.o(.data)
    uxDeletedTasksWaitingCleanUp             0x20000010   Data           4  tasks.o(.data)
    uxCurrentNumberOfTasks                   0x20000014   Data           4  tasks.o(.data)
    xTickCount                               0x20000018   Data           4  tasks.o(.data)
    uxTopReadyPriority                       0x2000001c   Data           4  tasks.o(.data)
    xSchedulerRunning                        0x20000020   Data           4  tasks.o(.data)
    uxPendedTicks                            0x20000024   Data           4  tasks.o(.data)
    xYieldPending                            0x20000028   Data           4  tasks.o(.data)
    xNumOfOverflows                          0x2000002c   Data           4  tasks.o(.data)
    uxTaskNumber                             0x20000030   Data           4  tasks.o(.data)
    xNextTaskUnblockTime                     0x20000034   Data           4  tasks.o(.data)
    xIdleTaskHandle                          0x20000038   Data           4  tasks.o(.data)
    uxSchedulerSuspended                     0x2000003c   Data           4  tasks.o(.data)
    .data                                    0x20000040   Section       20  timers.o(.data)
    pxCurrentTimerList                       0x20000040   Data           4  timers.o(.data)
    pxOverflowTimerList                      0x20000044   Data           4  timers.o(.data)
    xTimerQueue                              0x20000048   Data           4  timers.o(.data)
    xTimerTaskHandle                         0x2000004c   Data           4  timers.o(.data)
    xLastTime                                0x20000050   Data           4  timers.o(.data)
    .data                                    0x20000054   Section       12  port.o(.data)
    uxCriticalNesting                        0x20000054   Data           4  port.o(.data)
    ucMaxSysCallPriority                     0x20000058   Data           1  port.o(.data)
    ulMaxPRIGROUPValue                       0x2000005c   Data           4  port.o(.data)
    .data                                    0x20000060   Section        8  heap_1.o(.data)
    xNextFreeByte                            0x20000060   Data           4  heap_1.o(.data)
    pucAlignedHeap                           0x20000064   Data           4  heap_1.o(.data)
    .bss                                     0x20000068   Section      200  tasks.o(.bss)
    pxReadyTasksLists                        0x20000068   Data         100  tasks.o(.bss)
    xDelayedTaskList1                        0x200000cc   Data          20  tasks.o(.bss)
    xDelayedTaskList2                        0x200000e0   Data          20  tasks.o(.bss)
    xPendingReadyList                        0x200000f4   Data          20  tasks.o(.bss)
    xTasksWaitingTermination                 0x20000108   Data          20  tasks.o(.bss)
    xSuspendedTaskList                       0x2000011c   Data          20  tasks.o(.bss)
    .bss                                     0x20000130   Section       40  timers.o(.bss)
    xActiveTimerList1                        0x20000130   Data          20  timers.o(.bss)
    xActiveTimerList2                        0x20000144   Data          20  timers.o(.bss)
    .bss                                     0x20000158   Section     4096  heap_1.o(.bss)
    ucHeap                                   0x20000158   Data        4096  heap_1.o(.bss)
    .bss                                     0x20001158   Section       96  libspace.o(.bss)
    HEAP                                     0x200011b8   Section        0  startup_rvmdk.o(HEAP)
    STACK                                    0x200011b8   Section      256  startup_rvmdk.o(STACK)
    HeapMem                                  0x200011b8   Data           0  startup_rvmdk.o(HEAP)
    StackMem                                 0x200011b8   Data           0  startup_rvmdk.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __Vectors                                0x00000000   Data           0  startup_rvmdk.o(RESET)
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    Reset_Handler                            0x0000026d   Thumb Code     0  startup_rvmdk.o(RESET)
    __main                                   0x00000289   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x00000291   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x00000291   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x00000291   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x0000029f   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x000002c5   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x000002e1   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x000002fd   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x000002ff   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_trap_1                  0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x00000305   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x00000307   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x00000307   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x00000307   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x00000307   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x00000307   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x00000307   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x00000307   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x00000309   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x00000309   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x00000309   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x0000030f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x0000030f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x00000313   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x00000313   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0000031b   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x0000031d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x0000031d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000321   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    SVC_Handler                              0x00000329   Thumb Code    28  port.o(.emb_text)
    __asm___6_port_c_39a90d8d__prvStartFirstTask 0x00000349   Thumb Code    36  port.o(.emb_text)
    __asm___6_port_c_39a90d8d__prvEnableVFP  0x00000371   Thumb Code    16  port.o(.emb_text)
    PendSV_Handler                           0x00000385   Thumb Code    88  port.o(.emb_text)
    vPortGetIPSR                             0x000003e1   Thumb Code     6  port.o(.emb_text)
    __user_initial_stackheap                 0x000003e9   Thumb Code     0  startup_rvmdk.o(.text)
    __aeabi_memcpy                           0x00000401   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x00000401   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x00000467   Thumb Code     0  rt_memcpy_v6.o(.text)
    __use_two_region_memory                  0x0000048b   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x0000048d   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x0000048f   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x00000491   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x00000491   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x00000491   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x000004d9   Thumb Code     0  rt_memcpy_w.o(.text)
    __user_setup_stackheap                   0x000004f5   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x0000053f   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x00000551   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x00000551   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x00000551   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x00000559   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x00000565   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x00000565   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x00000567   Thumb Code     0  indicate_semi.o(.text)
    SysTick_Handler                          0x00000569   Thumb Code    48  port.o(i.SysTick_Handler)
    main                                     0x0000059d   Thumb Code    30  main.o(i.main)
    pvPortMalloc                             0x00000ed5   Thumb Code    98  heap_1.o(i.pvPortMalloc)
    pxPortInitialiseStack                    0x00000f45   Thumb Code    38  port.o(i.pxPortInitialiseStack)
    uxListRemove                             0x00000f71   Thumb Code    40  list.o(i.uxListRemove)
    vListInitialise                          0x00000f99   Thumb Code    26  list.o(i.vListInitialise)
    vListInitialiseItem                      0x00000fb3   Thumb Code     6  list.o(i.vListInitialiseItem)
    vListInsert                              0x00000fb9   Thumb Code    52  list.o(i.vListInsert)
    vListInsertEnd                           0x00000fed   Thumb Code    24  list.o(i.vListInsertEnd)
    vPeriodicTask                            0x00001005   Thumb Code    24  main.o(i.vPeriodicTask)
    vPortEnterCritical                       0x0000101d   Thumb Code    80  port.o(i.vPortEnterCritical)
    vPortExitCritical                        0x00001075   Thumb Code    58  port.o(i.vPortExitCritical)
    vPortFree                                0x000010b5   Thumb Code    36  heap_1.o(i.vPortFree)
    vPortSetupTimerInterrupt                 0x000010d9   Thumb Code    36  port.o(i.vPortSetupTimerInterrupt)
    vPortValidateInterruptPriority           0x00001101   Thumb Code   110  port.o(i.vPortValidateInterruptPriority)
    vQueueWaitForMessageRestricted           0x0000117d   Thumb Code    74  queue.o(i.vQueueWaitForMessageRestricted)
    vTaskDelayUntil                          0x000011c9   Thumb Code   206  tasks.o(i.vTaskDelayUntil)
    vTaskInternalSetTimeOutState             0x000012a5   Thumb Code    14  tasks.o(i.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x000012bd   Thumb Code     8  tasks.o(i.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x000012c9   Thumb Code    54  tasks.o(i.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x00001305   Thumb Code    62  tasks.o(i.vTaskPlaceOnEventListRestricted)
    vTaskStartScheduler                      0x00001349   Thumb Code   122  tasks.o(i.vTaskStartScheduler)
    vTaskSuspendAll                          0x000013e1   Thumb Code    12  tasks.o(i.vTaskSuspendAll)
    vTaskSwitchContext                       0x000013f1   Thumb Code   120  tasks.o(i.vTaskSwitchContext)
    xPortStartScheduler                      0x0000147d   Thumb Code   338  port.o(i.xPortStartScheduler)
    xQueueGenericCreate                      0x000015ed   Thumb Code    90  queue.o(i.xQueueGenericCreate)
    xQueueGenericReset                       0x00001649   Thumb Code   148  queue.o(i.xQueueGenericReset)
    xQueueGenericSend                        0x000016e1   Thumb Code   460  queue.o(i.xQueueGenericSend)
    xQueueGenericSendFromISR                 0x000018b1   Thumb Code   272  queue.o(i.xQueueGenericSendFromISR)
    xQueueReceive                            0x000019c1   Thumb Code   362  queue.o(i.xQueueReceive)
    xTaskCheckForTimeOut                     0x00001b31   Thumb Code   136  tasks.o(i.xTaskCheckForTimeOut)
    xTaskCreate                              0x00001bc1   Thumb Code    96  tasks.o(i.xTaskCreate)
    xTaskGetSchedulerState                   0x00001c21   Thumb Code    24  tasks.o(i.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x00001c41   Thumb Code     6  tasks.o(i.xTaskGetTickCount)
    xTaskIncrementTick                       0x00001c4d   Thumb Code   284  tasks.o(i.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x00001d95   Thumb Code   192  tasks.o(i.xTaskPriorityDisinherit)
    xTaskRemoveFromEventList                 0x00001e61   Thumb Code   130  tasks.o(i.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00001efd   Thumb Code   226  tasks.o(i.xTaskResumeAll)
    xTimerCreateTimerTask                    0x00002005   Thumb Code    68  timers.o(i.xTimerCreateTimerTask)
    xTimerGenericCommand                     0x0000205d   Thumb Code   128  timers.o(i.xTimerGenericCommand)
    _fp_init                                 0x000020e1   Thumb Code    10  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x000020e9   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x000020e9   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    Region$$Table$$Base                      0x000020ec   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x0000210c   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  main.o(.data)
    pxCurrentTCB                             0x20000004   Data           4  tasks.o(.data)
    __libspace_start                         0x20001158   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x200011b8   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x0000026d

  Load Region LR_1 (Base: 0x00000000, Size: 0x00002174, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x0000210c, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x00000288   Code   RO            3  * RESET               startup_rvmdk.o
    0x00000288   0x00000288   0x00000008   Code   RO          909  * !!!main             c_w.l(__main.o)
    0x00000290   0x00000290   0x00000034   Code   RO         1068    !!!scatter          c_w.l(__scatter.o)
    0x000002c4   0x000002c4   0x0000001a   Code   RO         1070    !!handler_copy      c_w.l(__scatter_copy.o)
    0x000002de   0x000002de   0x00000002   PAD
    0x000002e0   0x000002e0   0x0000001c   Code   RO         1072    !!handler_zi        c_w.l(__scatter_zi.o)
    0x000002fc   0x000002fc   0x00000002   Code   RO          938    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x000002fe   0x000002fe   0x00000004   Code   RO          944    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          947    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          950    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          952    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          954    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          957    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          959    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          961    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          963    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          965    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          967    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          969    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          971    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          973    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          975    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          977    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          981    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          983    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          985    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          987    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000002   Code   RO          988    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x00000304   0x00000304   0x00000002   Code   RO         1008    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1021    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1023    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1026    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1029    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1031    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1034    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x00000306   0x00000306   0x00000002   Code   RO         1035    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x00000308   0x00000308   0x00000000   Code   RO          911    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x00000308   0x00000308   0x00000000   Code   RO          915    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x00000308   0x00000308   0x00000006   Code   RO          927    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0000030e   0x0000030e   0x00000000   Code   RO          917    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x0000030e   0x0000030e   0x00000004   Code   RO          918    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x00000312   0x00000312   0x00000000   Code   RO          920    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x00000312   0x00000312   0x00000008   Code   RO          921    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0000031a   0x0000031a   0x00000002   Code   RO          942    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x0000031c   0x0000031c   0x00000000   Code   RO          990    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x0000031c   0x0000031c   0x00000004   Code   RO          991    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x00000320   0x00000320   0x00000006   Code   RO          992    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x00000326   0x00000326   0x00000002   PAD
    0x00000328   0x00000328   0x000000be   Code   RO          793    .emb_text           port.o
    0x000003e6   0x000003e6   0x00000002   PAD
    0x000003e8   0x000003e8   0x00000018   Code   RO            4    .text               startup_rvmdk.o
    0x00000400   0x00000400   0x0000008a   Code   RO          905    .text               c_w.l(rt_memcpy_v6.o)
    0x0000048a   0x0000048a   0x00000006   Code   RO          907    .text               c_w.l(heapauxi.o)
    0x00000490   0x00000490   0x00000064   Code   RO          912    .text               c_w.l(rt_memcpy_w.o)
    0x000004f4   0x000004f4   0x0000004a   Code   RO          929    .text               c_w.l(sys_stackheap_outer.o)
    0x0000053e   0x0000053e   0x00000012   Code   RO          931    .text               c_w.l(exit.o)
    0x00000550   0x00000550   0x00000008   Code   RO          939    .text               c_w.l(libspace.o)
    0x00000558   0x00000558   0x0000000c   Code   RO         1000    .text               c_w.l(sys_exit.o)
    0x00000564   0x00000564   0x00000002   Code   RO         1011    .text               c_w.l(use_no_semi.o)
    0x00000566   0x00000566   0x00000000   Code   RO         1013    .text               c_w.l(indicate_semi.o)
    0x00000566   0x00000566   0x00000002   PAD
    0x00000568   0x00000568   0x00000034   Code   RO          794    i.SysTick_Handler   port.o
    0x0000059c   0x0000059c   0x0000002c   Code   RO           11    i.main              main.o
    0x000005c8   0x000005c8   0x00000098   Code   RO          345    i.prvAddCurrentTaskToDelayedList  tasks.o
    0x00000660   0x00000660   0x000000b4   Code   RO          346    i.prvAddNewTaskToReadyList  tasks.o
    0x00000714   0x00000714   0x0000004c   Code   RO          663    i.prvCheckForValidListAndQueue  timers.o
    0x00000760   0x00000760   0x00000048   Code   RO          347    i.prvCheckTasksWaitingTermination  tasks.o
    0x000007a8   0x000007a8   0x0000002a   Code   RO          118    i.prvCopyDataFromQueue  queue.o
    0x000007d2   0x000007d2   0x0000007c   Code   RO          119    i.prvCopyDataToQueue  queue.o
    0x0000084e   0x0000084e   0x00000012   Code   RO          348    i.prvDeleteTCB      tasks.o
    0x00000860   0x00000860   0x00000028   Code   RO          664    i.prvGetNextExpireTime  timers.o
    0x00000888   0x00000888   0x00000028   Code   RO          349    i.prvIdleTask       tasks.o
    0x000008b0   0x000008b0   0x0000002a   Code   RO          122    i.prvInitialiseNewQueue  queue.o
    0x000008da   0x000008da   0x000000ac   Code   RO          350    i.prvInitialiseNewTask  tasks.o
    0x00000986   0x00000986   0x00000002   PAD
    0x00000988   0x00000988   0x00000068   Code   RO          351    i.prvInitialiseTaskLists  tasks.o
    0x000009f0   0x000009f0   0x00000058   Code   RO          666    i.prvInsertTimerInActiveList  timers.o
    0x00000a48   0x00000a48   0x0000001a   Code   RO          123    i.prvIsQueueEmpty   queue.o
    0x00000a62   0x00000a62   0x0000001e   Code   RO          124    i.prvIsQueueFull    queue.o
    0x00000a80   0x00000a80   0x00000094   Code   RO          125    i.prvNotifyQueueSetContainer  queue.o
    0x00000b14   0x00000b14   0x00000064   Code   RO          667    i.prvProcessExpiredTimer  timers.o
    0x00000b78   0x00000b78   0x000000f8   Code   RO          668    i.prvProcessReceivedCommands  timers.o
    0x00000c70   0x00000c70   0x00000074   Code   RO          669    i.prvProcessTimerOrBlockTask  timers.o
    0x00000ce4   0x00000ce4   0x00000034   Code   RO          352    i.prvResetNextTaskUnblockTime  tasks.o
    0x00000d18   0x00000d18   0x0000002c   Code   RO          670    i.prvSampleTimeNow  timers.o
    0x00000d44   0x00000d44   0x000000a0   Code   RO          671    i.prvSwitchTimerLists  timers.o
    0x00000de4   0x00000de4   0x00000044   Code   RO          795    i.prvTaskExitError  port.o
    0x00000e28   0x00000e28   0x0000001a   Code   RO          672    i.prvTimerTask      timers.o
    0x00000e42   0x00000e42   0x00000092   Code   RO          126    i.prvUnlockQueue    queue.o
    0x00000ed4   0x00000ed4   0x00000070   Code   RO          870    i.pvPortMalloc      heap_1.o
    0x00000f44   0x00000f44   0x0000002c   Code   RO          796    i.pxPortInitialiseStack  port.o
    0x00000f70   0x00000f70   0x00000028   Code   RO           66    i.uxListRemove      list.o
    0x00000f98   0x00000f98   0x0000001a   Code   RO           67    i.vListInitialise   list.o
    0x00000fb2   0x00000fb2   0x00000006   Code   RO           68    i.vListInitialiseItem  list.o
    0x00000fb8   0x00000fb8   0x00000034   Code   RO           69    i.vListInsert       list.o
    0x00000fec   0x00000fec   0x00000018   Code   RO           70    i.vListInsertEnd    list.o
    0x00001004   0x00001004   0x00000018   Code   RO           12    i.vPeriodicTask     main.o
    0x0000101c   0x0000101c   0x00000058   Code   RO          798    i.vPortEnterCritical  port.o
    0x00001074   0x00001074   0x00000040   Code   RO          799    i.vPortExitCritical  port.o
    0x000010b4   0x000010b4   0x00000024   Code   RO          871    i.vPortFree         heap_1.o
    0x000010d8   0x000010d8   0x00000028   Code   RO          800    i.vPortSetupTimerInterrupt  port.o
    0x00001100   0x00001100   0x0000007c   Code   RO          801    i.vPortValidateInterruptPriority  port.o
    0x0000117c   0x0000117c   0x0000004a   Code   RO          131    i.vQueueWaitForMessageRestricted  queue.o
    0x000011c6   0x000011c6   0x00000002   PAD
    0x000011c8   0x000011c8   0x000000dc   Code   RO          361    i.vTaskDelayUntil   tasks.o
    0x000012a4   0x000012a4   0x00000018   Code   RO          364    i.vTaskInternalSetTimeOutState  tasks.o
    0x000012bc   0x000012bc   0x0000000c   Code   RO          365    i.vTaskMissedYield  tasks.o
    0x000012c8   0x000012c8   0x0000003c   Code   RO          367    i.vTaskPlaceOnEventList  tasks.o
    0x00001304   0x00001304   0x00000044   Code   RO          368    i.vTaskPlaceOnEventListRestricted  tasks.o
    0x00001348   0x00001348   0x00000098   Code   RO          375    i.vTaskStartScheduler  tasks.o
    0x000013e0   0x000013e0   0x00000010   Code   RO          377    i.vTaskSuspendAll   tasks.o
    0x000013f0   0x000013f0   0x0000008c   Code   RO          378    i.vTaskSwitchContext  tasks.o
    0x0000147c   0x0000147c   0x00000170   Code   RO          802    i.xPortStartScheduler  port.o
    0x000015ec   0x000015ec   0x0000005a   Code   RO          136    i.xQueueGenericCreate  queue.o
    0x00001646   0x00001646   0x00000002   PAD
    0x00001648   0x00001648   0x00000098   Code   RO          137    i.xQueueGenericReset  queue.o
    0x000016e0   0x000016e0   0x000001d0   Code   RO          138    i.xQueueGenericSend  queue.o
    0x000018b0   0x000018b0   0x00000110   Code   RO          139    i.xQueueGenericSendFromISR  queue.o
    0x000019c0   0x000019c0   0x00000170   Code   RO          146    i.xQueueReceive     queue.o
    0x00001b30   0x00001b30   0x00000090   Code   RO          379    i.xTaskCheckForTimeOut  tasks.o
    0x00001bc0   0x00001bc0   0x00000060   Code   RO          380    i.xTaskCreate       tasks.o
    0x00001c20   0x00001c20   0x00000020   Code   RO          384    i.xTaskGetSchedulerState  tasks.o
    0x00001c40   0x00001c40   0x0000000c   Code   RO          385    i.xTaskGetTickCount  tasks.o
    0x00001c4c   0x00001c4c   0x00000148   Code   RO          387    i.xTaskIncrementTick  tasks.o
    0x00001d94   0x00001d94   0x000000cc   Code   RO          390    i.xTaskPriorityDisinherit  tasks.o
    0x00001e60   0x00001e60   0x0000009c   Code   RO          392    i.xTaskRemoveFromEventList  tasks.o
    0x00001efc   0x00001efc   0x00000108   Code   RO          393    i.xTaskResumeAll    tasks.o
    0x00002004   0x00002004   0x00000058   Code   RO          676    i.xTimerCreateTimerTask  timers.o
    0x0000205c   0x0000205c   0x00000084   Code   RO          677    i.xTimerGenericCommand  timers.o
    0x000020e0   0x000020e0   0x0000000a   Code   RO          998    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x000020ea   0x000020ea   0x00000002   PAD
    0x000020ec   0x000020ec   0x00000020   Data   RO         1066    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x0000210c, Size: 0x00000068, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x0000210c   0x00000004   Data   RW           13    .data               main.o
    0x20000004   0x00002110   0x0000003c   Data   RW          396    .data               tasks.o
    0x20000040   0x0000214c   0x00000014   Data   RW          683    .data               timers.o
    0x20000054   0x00002160   0x0000000c   Data   RW          803    .data               port.o
    0x20000060   0x0000216c   0x00000008   Data   RW          875    .data               heap_1.o


    Execution Region ER_ZI (Exec base: 0x20000068, Load base: 0x00002174, Size: 0x00001250, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000068        -       0x000000c8   Zero   RW          395    .bss                tasks.o
    0x20000130        -       0x00000028   Zero   RW          682    .bss                timers.o
    0x20000158        -       0x00001000   Zero   RW          874    .bss                heap_1.o
    0x20001158        -       0x00000060   Zero   RW          940    .bss                c_w.l(libspace.o)
    0x200011b8        -       0x00000000   Zero   RW            2    HEAP                startup_rvmdk.o
    0x200011b8        -       0x00000100   Zero   RW            1    STACK               startup_rvmdk.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       148         14          0          8       4096       2231   heap_1.o
       148          0          0          0          0       4814   list.o
        68         14          0          4          0      13493   main.o
      1038         92          0         12          0      11989   port.o
      1978         14          0          0          0      23867   queue.o
       672        636          0          0        256        548   startup_rvmdk.o
      2718        358          0         60        200      24427   tasks.o
      1118        100          0         20         40      17655   timers.o

    ----------------------------------------------------------------------
      7896       1228         32        104       4592      99024   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        10          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
       532         16          0          0         96        848   Library Totals
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       514         16          0          0         96        732   c_w.l
        10          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
       532         16          0          0         96        848   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      8428       1244         32        104       4688      93512   Grand Totals
      8428       1244         32        104       4688      93512   ELF Image Totals
      8428       1244         32        104          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 8460 (   8.26kB)
    Total RW  Size (RW Data + ZI Data)              4792 (   4.68kB)
    Total ROM Size (Code + RO Data + RW Data)       8564 (   8.36kB)

==============================================================================

